using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.Linq;

namespace EasyPath
{
    public class EasyPathDraw : MonoBehaviour
    {
        
        public List<GameObject> pathsasChild = new List<GameObject>();
        public Color pathColor;
       public Transform trans;
        [Header("Write Object's Tag")]
        public String PlayerTag;
        [Header("You can set your smoothness")]
        public float smooth ;
        public float distance;
        public bool canmove = true;
        public Transform nextChild;
        int i;
        Vector3 direction;
        public void Start()
        {
            i = 1;
            nextChild = gameObject.transform.GetChild(1);
            direction = (nextChild.position - trans.position);


        }
        private void Update()
        {
            if(canmove)
            //trans.position = Vector2.Lerp(trans.position, nextChild.position, smooth * Time.deltaTime);
            trans.Translate(direction.normalized*smooth*Time.deltaTime);
            
                if (Vector2.Distance(trans.position, nextChild.position) < distance)
                {
                if (nextChild == pathsasChild[pathsasChild.Count - 1].transform)
                    canmove = false;
                if (nextChild != pathsasChild[pathsasChild.Count - 1].transform)
                    i = i + 1;
                    nextChild = pathsasChild[i].transform;
                direction = (canmove) ? (nextChild.position - trans.position) : Vector3.zero;

                }
              
            


        }
        public void drawGizmoForAll()
        {
          

            if (pathsasChild.Count == gameObject.transform.childCount)
            {
                for (int i = 0; i < gameObject.transform.childCount; i++)
                {
                    pathsasChild[i] = gameObject.transform.GetChild(i).gameObject;



                }
                for (int a = 0; a < gameObject.transform.childCount - 1; a++)
                {

                    Gizmos.DrawLine(pathsasChild[a].transform.position, pathsasChild[a + 1].transform.position);
                }
            }
            else
            {
                print("Lütfen array boyutu ile childların sayısını eşit yapınız!");
            }
            foreach (GameObject paths in pathsasChild)
            {
                Gizmos.color = Color.red;
                Gizmos.DrawSphere(paths.transform.position, 0.1f);

            }

        }
        private void OnDrawGizmos()
        {

            drawGizmoForAll();
          

       }

      
       
    }
}


